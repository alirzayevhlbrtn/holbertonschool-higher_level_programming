=============
2. Matrix div
=============


Import:
=======
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Test cases for excepted:
>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix [
...	[21, 24, 27].
...	[39, 42, 45]
... ]
>>> print(matrix_divided(matrix, 3))
[[7.0, 8.0, 9.0], [13.0, 14.0, 15.0]]




Test cases with exceptions:
===========================
>>> matrix = "hey"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "holberton"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6, 7]
,,, ]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...	[1, 2, 3],
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [
...	[1, 2, 3]
...	[4, 5, 6]
... ]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required postional argument: 'div'
